rule cut_adapter:
	input:
		"raw/{sample}_1.fastq.gz",
		"raw/{sample}_2.fastq.gz",
	output:
		"clean/{sample}_1.fastq.gz",
		"clean/{sample}_2.fastq.gz"
	log:"clean/{sample}_cutapapt.log"
	threads: 4
	shell:
		"cutadapt -j {threads} --time 1 -e 0.1 -O 3 --quality-cutoff 25 \
		-m 15 -a CTGTCTCTTATA \
		-A AGACGGGAAGAGCGTCGTGAGGGAAGAGTGTAGATCTCGGTGGTCGCGTATCATT \
		-o {output[0]} -p {output[1]} {input[0]} {input[1]} >{log} 2>&1"

rule QC_clean_fq:
	input: 
		"clean/{sample}_1.fastq.gz",
		"clean/{sample}_2.fastq.gz"
	output: 
		"QC_clean/{sample}_1_fastqc.html",
		"QC_clean/{sample}_2_fastqc.html"
	params:out_dir="QC_clean"
	threads: 8
	log: "QC_clean/{sample}_fastqc.html.log"
	shell: 
		  "fastqc -t {threads} {input} -o {params.out_dir} >{log} 2>&1"

rule multi_QC_clean:
	input: expand("QC_clean/{sample}_2_fastqc.html", sample=SI)
	output:"QC_clean/multiqc/multiqc_report.html"
	params: 
		in_dir="QC_clean",
		out_dir="QC_clean/multiqc/"
	log: "QC_clean/multiqc/multiqc_report.html.log"
	shell:"multiqc {params.in_dir}/*fastqc.zip -o {params.out_dir} >{log} 2>&1"

